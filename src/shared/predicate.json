{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "https://raw.githubusercontent.com/SPGoding/datapack-json/master/src/shared/predicate.json",
    "$defs": {
        "block": {
            "properties": {
                "block": {
                    "$ref": "./block_name.json",
                    "title": "The block name"
                },
                "state": {
                    "type": "object",
                    "title": "The string values of the block states",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "damage": {
            "type": "object",
            "properties": {
                "dealt": {
                    "$ref": "./range.json",
                    "title": "How much damage was dealt",
                    "description": "This is calculated before damage reduction (such due to armour)"
                },
                "taken": {
                    "$ref": "./range.json",
                    "title": "How much damage was taken",
                    "description": "This is calculated after damage reduction (such due to armour)"
                },
                "blocked": {
                    "type": "boolean",
                    "title": "Shield used",
                    "description": "Whether the damage was blocked"
                },
                "source_entity": {
                    "$ref": "#/$defs/entity",
                    "title": "Entity which did the hitting"
                },
                "direct_entity": {
                    "$ref": "#/$defs/entity",
                    "title": "Entity which did the hitting"
                },
                "type": {
                    "$ref": "#/$defs/damage_flags"
                }
            },
            "additionalProperties": false
        },
        "damage_flags": {
            "type": "object",
            "properties": {
                "bypasses_armor": {
                    "type": "boolean"
                },
                "bypasses_invulnerability": {
                    "type": "boolean"
                },
                "bypasses_magic": {
                    "type": "boolean"
                },
                "is_explosion": {
                    "type": "boolean"
                },
                "is_fire": {
                    "type": "boolean"
                },
                "is_lightning": {
                    "type": "boolean"
                },
                "is_magic": {
                    "type": "boolean"
                },
                "is_projectile": {
                    "type": "boolean"
                },
                "source_entity": {
                    "$ref": "#/$defs/entity"
                },
                "direct_entity": {
                    "$ref": "#/$defs/entity"
                }
            },
            "additionalProperties": false
        },
        "death": {
            "properties": {
                "entity": {
                    "$ref": "#/$defs/entity",
                    "title": "The entity which died"
                },
                "killing_blow": {
                    "$ref": "#/$defs/damage_flags",
                    "title": "Information about the killing blow"
                },
                "additionalProperties": false
            }
        },
        "distance": {
            "type": "object",
            "properties": {
                "absolute": {
                    "$ref": "./range.json"
                },
                "x": {
                    "$ref": "./range.json"
                },
                "y": {
                    "$ref": "./range.json"
                },
                "z": {
                    "$ref": "./range.json"
                },
                "horizontal": {
                    "$ref": "./range.json"
                }
            },
            "additionalProperties": false
        },
        "effect": {
            "type": "object",
            "title": "The effects applied. Each key is the effect name",
            "propertyNames": {
                "$ref": "./effect_name.json"
            },
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "amplifier": {
                        "title": "The level of the effect",
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "$ref": "./range.json"
                            }
                        ]
                    },
                    "duration": {
                        "title": "The remaining time of the effect (in ticks)",
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "$ref": "./range.json"
                            }
                        ]
                    },
                    "visible": {
                        "type": "boolean",
                        "title": "Whether the effect is visible"
                    }
                },
                "additionalProperties": false
            }
        },
        "entity": {
            "properties": {
                "distance": {
                    "$ref": "#/$defs/distance",
                    "title": "The distance",
                    "description": "The distance between the entity and another location. Location compared to depends on the trigger"
                },
                "effects": {
                    "$ref": "#/$defs/effect",
                    "title": "Effects on entity",
                    "description": "The effects on the entity"
                },
                "equipment": {
                    "title": "Equipment of entity",
                    "additionalProperties": {
                        "$ref": "#/$defs/item"
                    },
                    "propertyNames": {
                        "enum": [
                            "head",
                            "chest",
                            "legs",
                            "feet",
                            "mainhand",
                            "offhand"
                        ]
                    }
                },
                "location": {
                    "$ref": "#/$defs/location",
                    "title": "Location",
                    "description": "Information about the location of the entity"
                },
                "nbt": {
                    "$ref": "#/$defs/nbt_string",
                    "title": "The nbt of the entity"
                },
                "type": {
                    "oneOf": [
                        {
                            "$ref": "./entity_name.json",
                            "title": "The type of the entity"
                        },
                        {
                            "$ref": "./tag_id.json",
                            "title": "The entity type tag where the entity should be"
                        }
                    ]
                },
                "team": {
                    "type": "string",
                    "title": "The team of the entity"
                },
                "player": {
                    "type": "object",
                    "title": "Checks player properties",
                    "additionalProperties": false,
                    "properties": {
                        "advancements": {
                            "type": "object",
                            "title": "Map of advancement ids",
                            "additionalProperties": {
                                "oneOf": [
                                    {
                                        "type": "boolean",
                                        "title": "Whether or not the player achieves this advancement"
                                    },
                                    {
                                        "type": "object",
                                        "title": "Map of critetion ids",
                                        "additionalProperties": {
                                            "type": "boolean",
                                            "title": "Whether or not the player achieves this critetion"
                                        }
                                    }
                                ]
                            },
                            "propertyNames": {
                                "$ref": "./namespaced_id.json"
                            }
                        },
                        "gamemode": {
                            "enum": [
                                "adventure",
                                "creative",
                                "spectator",
                                "survival"
                            ]
                        },
                        "level": {
                            "$ref": "./range.json",
                            "title": "range of allowed player levels"
                        },
                        "recipes": {
                            "type": "object",
                            "title": "Map of recipe ids",
                            "additionalProperties": {
                                "type": "boolean",
                                "title": "Whether or not the recipe is known to player"
                            },
                            "propertyNames": {
                                "$ref": "./namespaced_id.json"
                            }
                        },
                        "stats": {
                            "type": "array",
                            "title": "List of statistics to match",
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "type": {
                                        "title": "Stat type"
                                    },
                                    "stat": {
                                        "title": "Stat name"
                                    },
                                    "value": {
                                        "$ref": "./range.json",
                                        "title": "Value of the stat"
                                    }
                                },
                                "oneOf": [
                                    {
                                        "properties": {
                                            "type": {
                                                "enum": [
                                                    "minecraft:custom"
                                                ]
                                            },
                                            "stat": {
                                                "$ref": "./custom_stat.json"
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "type": {
                                                "enum": [
                                                    "minecraft:crafted",
                                                    "minecraft:used",
                                                    "minecraft:broken",
                                                    "minecraft:picked_up",
                                                    "minecraft:dropped"
                                                ]
                                            },
                                            "stat": {
                                                "$ref": "./item_name.json"
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "type": {
                                                "enum": [
                                                    "minecraft:mined"
                                                ]
                                            },
                                            "stat": {
                                                "$ref": "./block_name.json"
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "type": {
                                                "enum": [
                                                    "minecraft:killed",
                                                    "minecraft:killed_by"
                                                ]
                                            },
                                            "stat": {
                                                "$ref": "./entity_name.json"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "flags": {
                    "type": "object",
                    "title": "The flags of the entity",
                    "properties": {
                        "is_on_fire": {
                            "type": "boolean",
                            "title": "Is on fire",
                            "description": "True if the entity is on fire"
                        },
                        "is_sneaking": {
                            "type": "boolean",
                            "title": "Is sneaking",
                            "description": "True if the entity is sneaking"
                        },
                        "is_sprinting": {
                            "type": "boolean",
                            "title": "Is sprinting",
                            "description": "True if the entity is sprinting"
                        },
                        "is_swimming": {
                            "type": "boolean",
                            "title": "Is swimming",
                            "description": "True if the entity is swimming"
                        },
                        "is_baby": {
                            "type": "boolean",
                            "title": "Is baby",
                            "description": "True if the entity is baby"
                        }
                    }
                }
            },
            "additionalProperties": false
        },
        "item": {
            "properties": {
                "item": {
                    "$ref": "./item_name.json",
                    "title": "The item ID"
                },
                "tag": {
                    "$ref": "./namespaced_id.json",
                    "title": "The item tag where this item should be"
                },
                "durability": {
                    "$ref": "./range.json",
                    "title": "The remaining durability"
                },
                "count": {
                    "$ref": "./range.json",
                    "title": "The number of items in the stack"
                },
                "potion": {
                    "$ref": "./potion_name.json",
                    "title": "Potion type",
                    "description": "If the item is a potion, check its type"
                },
                "enchantments": {
                    "items": {
                        "type": "object",
                        "title": "The enchantments of the item",
                        "additionalProperties": false,
                        "properties": {
                            "enchantment": {
                                "$ref": "./enchantment_name.json",
                                "title": "The enchantment name"
                            },
                            "levels": {
                                "$ref": "./range.json",
                                "title": "The level of the advancements"
                            }
                        }
                    }
                },
                "nbt": {
                    "$ref": "#/$defs/nbt_string"
                }
            },
            "additionalProperties": false
        },
        "location": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "biome": {
                    "title": "The biome the location is in",
                    "$ref": "./biome_name.json"
                },
                "block": {
                    "type": "object",
                    "additionalProperties": false,
                    "title": "Predicate for block",
                    "properties": {
                        "block": {
                            "$ref": "./block_name.json",
                            "title": "Block ID"
                        },
                        "tag": {
                            "$ref": "./namespaced_id.json",
                            "title": "Block tag ID"
                        },
                        "nbt": {
                            "$ref": "#/$defs/nbt_string",
                            "title": "Block entity NBT"
                        },
                        "state": {
                            "additionalProperties": true,
                            "title": "Map of name-value properties"
                        }
                    }
                },
                "fluid": {
                    "type": "object",
                    "additionalProperties": false,
                    "title": "Predicate for fluid",
                    "properties": {
                        "fluid": {
                            "$ref": "./fluid_name.json",
                            "title": "Fluid ID"
                        },
                        "tag": {
                            "$ref": "./namespaced_id.json",
                            "title": "Fluid tag ID"
                        },
                        "state": {
                            "additionalProperties": true,
                            "title": "Map of name-value properties"
                        }
                    }
                },
                "light": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "light": {
                            "$ref": "./range.json",
                            "title": "The range of visble light",
                            "description": "visible light = max(sky-darkening,block)"
                        }
                    }
                },
                "dimension": {
                    "$ref": "./dimension_name.json",
                    "title": "The dimension the location is in"
                },
                "feature": {
                    "title": "The structure the location is in",
                    "enum": [
                        "Buried_Treasure",
                        "Desert_Pyramid",
                        "EndCity",
                        "Fortress",
                        "Igloo",
                        "Jungle_Pyramid",
                        "Mansion",
                        "Mineshaft",
                        "Monument",
                        "Ocean_Ruin",
                        "Shipwreck",
                        "Stronghold",
                        "Swamp_Hut",
                        "Village"
                    ]
                },
                "position": {
                    "title": "The numerical coordinates of the location",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "x": {
                            "$ref": "./range.json"
                        },
                        "y": {
                            "$ref": "./range.json"
                        },
                        "z": {
                            "$ref": "./range.json"
                        }
                    }
                }
            }
        },
        "nbt_string": {
            "type": "string",
            "title": "NBT string",
            "description": "A string of nbt, which is escaped using the json format (a \\ in front of each \\ or \")"
        }
    }
}
